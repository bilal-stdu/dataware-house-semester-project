CREATE DATABASE DWDM_PROJECT
USE DWDM_PROJECT

CREATE TABLE SUPPLIER
(
SUPPLIER_ID INT NOT NULL PRIMARY KEY,
SUPPLIER_NAME VARCHAR(50) NOT NULL,
CONTACT VARCHAR(50),
EMAIL VARCHAR(50),
ADDRESS VARCHAR(200),
)




Bulk insert DWDM_PROJECT.dbo.SUPPLIER from 'C:\Users\mbila\Downloads\SqlData\SUPPLIER.csv'
with (
    fieldterminator=',',
    rowterminator='\n',
	firstrow=2	
)

select * from SUPPLIER


CREATE TABLE PURCHASES
(
PURCHASES_ID INT NOT NULL PRIMARY KEY,
SUPPLIER_ID INT FOREIGN KEY REFERENCES SUPPLIER(SUPPLIER_ID),
PURCHASE_DATE DATE NOT NULL,
)
Bulk insert DWDM_PROJECT.dbo.PURCHASES from 'C:\Users\mbila\Downloads\SqlData\PURCHASES.csv'
with (
    fieldterminator=',',
    rowterminator='\n',
	firstrow=2	
)


select * from PURCHASES
CREATE TABLE PRODUCT_CATEGORY
(
PRD_CATEGORY_ID INT NOT NULL PRIMARY KEY,
CATEGORY_NAME VARCHAR(50) NOT NULL,
)
Bulk insert DWDM_PROJECT.dbo.PRODUCT_CATEGORY from 'C:\Users\mbila\Downloads\SqlData\PRODUCT_CATEGORY.csv'
with (
    fieldterminator=',',
    rowterminator='\n',
	firstrow=2	
)
select * from PRODUCT_CATEGORY

CREATE TABLE PRODUCTS 
(
PRODUCT_ID INT NOT NULL PRIMARY KEY,
PRODUCT_NAME VARCHAR(50) NOT NULL,
PRD_CATEGORY_ID INT NOT NULL FOREIGN KEY REFERENCES PRODUCT_CATEGORY(PRD_CATEGORY_ID),
)
Bulk insert DWDM_PROJECT.dbo.PRODUCTS  from 'C:\Users\mbila\Downloads\SqlData\PRODUCTS .csv'
with (
    fieldterminator=',',
    rowterminator='\n',
	firstrow=2	
)
select * from PRODUCTS

CREATE TABLE PURCHASE_DETAILS
(
PURCHASES_DETAILSID INT NOT NULL PRIMARY KEY,
PURCHASES_ID INT FOREIGN KEY REFERENCES PURCHASES(PURCHASES_ID),
PRODUCT_ID INT FOREIGN KEY REFERENCES PRODUCTS(PRODUCT_ID),
PURCHASE_PRICE INT NOT NULL,
PURCHASE_QUANTITY INT NOT NULL,
)

Bulk insert DWDM_PROJECT.dbo.PURCHASE_DETAILS from 'C:\Users\mbila\Downloads\SqlData\PURCHASE_DETAILS.csv'
with (
    fieldterminator=',',
    rowterminator='\n',
	firstrow=2	
)
select * from PURCHASE_DETAILS
DELETE FROM PURCHASE_DETAILS



CREATE TABLE ADDRESS_LINE
(
ADDRESS_ID INT NOT NULL PRIMARY KEY,
AREA VARCHAR(100),
CITY_NAME VARCHAR(50) NOT NULL,
PROVINCE_NAME VARCHAR(50) NOT NULL,
COUNTRY_NAME VARCHAR(50) NOT NULL,
)

Bulk insert DWDM_PROJECT.dbo.ADDRESS_LINE  from 'C:\Users\mbila\Downloads\SqlData\ADDRESS_LINE.csv'
with (
    fieldterminator=',',
    rowterminator='\n',
	firstrow=6	
)

select * from ADDRESS_LINE



CREATE TABLE CUSTOMERS
(
CUSTOMERS_ID INT NOT NULL PRIMARY KEY,
CUSTOMER_NAME VARCHAR(50) NOT NULL,
ADDRESS_ID INT FOREIGN KEY REFERENCES ADDRESS_LINE(ADDRESS_ID),

)
Bulk insert DWDM_PROJECT.dbo.CUSTOMERS  from 'C:\Users\mbila\Downloads\SqlData\CUSTOMERS.csv'
with (
    fieldterminator=',',
    rowterminator='\n',
	firstrow=2	
)
select * from CUSTOMERS


CREATE TABLE EMPLOYEES
(
EMPLOYEES_ID INT  NOT NULL PRIMARY KEY,
EMPLOYEE_NAME VARCHAR(50) NOT NULL,
EMPLOYEE_GENDER VARCHAR(10) NOT NULL,
CONTACT VARCHAR(50),
ADDRESS_ID INT FOREIGN KEY REFERENCES ADDRESS_LINE(ADDRESS_ID),
)

Bulk insert DWDM_PROJECT.dbo.EMPLOYEES  from 'C:\Users\mbila\Downloads\SqlData\EMPLOYEES.csv'
with (
    fieldterminator=',',
    rowterminator='\n',
	firstrow=2	
)
select * from EMPLOYEES

CREATE TABLE ORDERS 
(
ORDER_ID INT NOT NULL PRIMARY KEY,
CUSTOMERS_ID INT FOREIGN KEY REFERENCES CUSTOMERS(CUSTOMERS_ID),
EMPLOYEES_ID INT FOREIGN KEY REFERENCES EMPLOYEES(EMPLOYEES_ID),
ORDER_DATE DATE NOT NULL,
)

Bulk insert DWDM_PROJECT.dbo.ORDERS   from 'C:\Users\mbila\Downloads\SqlData\ORDERS .csv'
with (
    fieldterminator=',',
    rowterminator='\n',
	firstrow=2	
)
select * from ORDERS 

SELECT YEAR(ORDER_DATE) AS Year FROM ORDERS;
SELECT DATEPART(qq, ORDER_DATE) AS QUARTER FROM ORDERS;
SELECT MONTH(ORDER_DATE) AS MONTH FROM ORDERS;

delete from ORDERS

CREATE TABLE ORDER_LINE
(
ORDERLINE_ID INT NOT NULL PRIMARY KEY,
ORDER_ID INT FOREIGN KEY REFERENCES  ORDERS (ORDER_ID),
PRODUCT_ID INT FOREIGN KEY REFERENCES PRODUCTS(PRODUCT_ID),
PRD_QUANTITY INT NOT NULL,
PRICE_EACH INT NOT NULL,
)

drop table ORDER_LINE
drop table ORDERS

Bulk insert DWDM_PROJECT.dbo.ORDER_LINE  from 'C:\Users\mbila\Downloads\SqlData\ORDER_LINE.csv'
with (
    fieldterminator=',',
    rowterminator='\n',
	firstrow=2	
)
select * from ORDER_LINE
drop table ORDER_LINE



CREATE TABLE SALARY 
(
SALARY_ID INT NOT NULL PRIMARY KEY,
EMPLOYEES_ID INT FOREIGN KEY REFERENCES EMPLOYEES(EMPLOYEES_ID),
SALARY_AMOUNT MONEY NOT NULL,
)


Bulk insert DWDM_PROJECT.dbo.SALARY   from 'C:\Users\mbila\Downloads\SqlData\SALARY .csv'
with (
    fieldterminator=',',
    rowterminator='\n',
	firstrow=6	
)





select * from SALARY 
select * from EMPLOYEES
select * from SUPPLIER
select * from CUSTOMERS
select * from PURCHASES
select * from PURCHASE_DETAILS
select * from ORDER_LINE
select * from ORDERS
select * from ORDER_LINE
select * from PRODUCTS
select * from PRODUCT_DESIGNS
select * from PRODUCT_CATEGORY
select * from ADDRESS_LINE


SELECT PRD_QUANTITY,PRICE_EACH FROM ORDER_LINE WHERE PRODUCT_ID = 101
SELECT PURCHASE_QUANTITY, PURCHASE_PRICE FROM PURCHASE_DETAILS WHERE PRODUCT_ID = 101

--> Calculating Purchase Amount
SELECT PRODUCT_ID, SUM((PURCHASE_QUANTITY)*PURCHASE_PRICE) AS [TOTAL PURCHASED] 
FROM PURCHASE_DETAILS 
GROUP BY PRODUCT_ID 
ORDER BY  PRODUCT_ID;


-->Calculating sales amount
SELECT PRODUCT_ID, SUM((PRD_QUANTITY)*PRICE_EACH)  AS [TOTAL SOLD] 
FROM ORDER_LINE 
GROUP BY PRODUCT_ID 
ORDER BY  PRODUCT_ID;



--> Inserting Purchase Amount in TEMP1
SELECT PRODUCT_ID, SUM(CAST((PURCHASE_DETAILS.PURCHASE_PRICE*PURCHASE_QUANTITY) AS BIGINT)) AS [TOTAL PURCHASE AMOUNT]
INTO TEMP1 FROM PURCHASE_DETAILS
GROUP BY PRODUCT_ID
ORDER BY PRODUCT_ID;



--> Inserting Sale Amount in TEMP2
SELECT PRODUCT_ID,ORDER_ID,SUM(CAST(PRD_QUANTITY*PRICE_EACH AS BIGINT))AS [TOTAL SALE AMOUNT]
INTO TEMP2 FROM ORDER_LINE
GROUP BY PRODUCT_ID,ORDER_ID
ORDER BY PRODUCT_ID ASC;




SELECT [TOTAL PURCHASE AMOUNT] FROM TEMP1
SELECT [TOTAL SALE AMOUNT] FROM TEMP2

--> Checking Product Sale amount, purchase amount in single table
SELECT TEMP1.PRODUCT_ID ,TEMP1.[TOTAL PURCHASE AMOUNT], TEMP2.[TOTAL SALE AMOUNT],
INTO TEMP4 FROM TEMP1 
JOIN TEMP2 ON 
TEMP1.PRODUCT_ID = TEMP2.PRODUCT_ID
ORDER BY TEMP1.PRODUCT_ID ASC;

-->Checking Profit Product wise in single table
SELECT TEMP1.PRODUCT_ID, TEMP2.[TOTAL SALE AMOUNT]-TEMP1.[TOTAL PURCHASE AMOUNT] AS [PROFIT]
FROM TEMP1 
JOIN TEMP2 ON 
TEMP1.PRODUCT_ID = TEMP2.PRODUCT_ID
ORDER BY TEMP1.PRODUCT_ID ASC;



SELECT ORDERS.ORDER_DATE FROM ORDERS

